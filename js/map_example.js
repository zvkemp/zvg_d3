// Generated by CoffeeScript 1.6.3
(function() {
  var colors, height, svg, width;

  width = 1660;

  height = 1660;

  svg = d3.select('body').append('svg').attr('width', width).attr('height', height);

  colors = d3.scale.category10();

  d3.json('data/california_zips3.json', function(error, zips) {
    var calizips, path, projection;
    console.log(zips);
    window.zips = zips;
    calizips = topojson.feature(zips, zips.objects.california_zips);
    projection = d3.geo.albers().scale(8000).rotate([122.2500, 0, 0]).center([0, 37.0500]).parallels([36, 35]).translate([width / 4, height / 2]);
    window.projection = projection;
    path = d3.geo.path().projection(projection);
    return d3.json('data/calpop.json', function(error, pop) {
      var k, max, v;
      max = 0;
      window.pop = pop;
      for (k in pop) {
        v = pop[k];
        if (parseInt(v) > max) {
          max = parseInt(v);
        }
      }
      console.log('max', max);
      colors = d3.scale.linear().domain([0, max / 2, max]).range(['#fff', '#f00']);
      window.colors = colors;
      svg.selectAll('.zip').data(topojson.feature(zips, zips.objects.california_zips).features).enter().append('path').attr('class', function(d) {
        return "zip z" + d.id;
      }).attr('d', path).style('fill', function(d) {
        var p;
        p = parseInt(pop[d.id]);
        if (!p) {
          p = 0;
        }
        return colors(p);
      }).attr('title', function(d) {
        return d.id;
      });
      return svg.append('path').datum(topojson.mesh(zips, zips.objects.california_zips, function(a, b) {
        return a === b && a.id === b.id;
      })).attr('d', path).style('stroke', '#555').style('stroke-width', '2pt').style('fill', 'none');
    });
  });

}).call(this);
